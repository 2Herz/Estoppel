그래픽스 파이프라인

 - 파이프라인?
  -> 여러 공정별로 생산 라인이 나열되어 있고, 동시에 공정별 프로세서가 가능하게
     하는 공정법

 - 장점
  -> 각 공정의 독립적 작업처리가 가능, 즉 동시에 여러 작업의 진행이 가능하다.
     일반 생산에서는 하나의 일이 끝나야 다음 작업 가능
     파이프라인은 해당 라인 작업만 하기 때문에 동시 작업 가능

 - 그래픽스 파이프라인?
  -> 3차원 컴퓨터 그래픽에서 그래픽 하드웨어를 사용하여, 
     가상공산의 3차원 물체를 2차원의 화면에 출력하기 위한 일련의 공정

 - Direct3D?
  -> 게임과 같은 실시간 렌더링이 필요한 응용 프로그램 개발에 사용
     3D 가속 기능을 활용하여 변환, 조명에 대한 가속 기능 지원(T&L)

 - 그래픽스 파이프라인의 종류
  -> 고정기능, 프로그래머블

 - 고정기능 : 미리 정의되어 고정된 작업을 수행하는 파이프라인
 - 프로그래머블 : 프로그래머가 직접 출력에 관여하여 각자 자신만의 작업을
   수행하는 파이프라인

 - 고정기능 파이프라인

 1. 모델의 구축
 2. 가상 공간 배치
 3. 카메라 공간으로의 전개
 4. 컬링
 5. 조명 계산
 6. 클리핑
 7. 투영
 8. 뷰포트 변환
 9. 래스터라이즈

1. 모델의 구축
 1-1. 3D 정보의 종류
    1-1-1. Vertex : 3D의 가장 기본 단위
		    2D 포인트와 대응되는 개념
		    색상, 법선 등등 포인트보다
		    다양한 정보를 포함한 단위
    1-1-2. Polygon : 3개의 정점을 이어 만들어지는 면의 최소단위(삼각형)
		     3개의 정점(즉, 3개의 버텍스)
    1-1-3. Mesh : 1개 이상의 폴리곤으로 이루어진 면의 집합
		  프로그램에서 처리하는 기본 단위

 1-2. 3D 모델 구축
  1-2-1. 3D 모델?
	3D 정보를 직접 입력하거나, 외부 툴을 이요하여 만들어진
	3차원 오브젝트
	3D 모델들을 "각각의 독립된 좌표계에 표현" 하는 것
	이 단계의 연산은 CPU에서 처리
	다른 모델들과 독립적으로 구성 가능
  1-2-2. Local Space (로컬 공간)
	오브젝트들이 표현된 각각의 독립된 공간
	모델 구축과정을 쉽고 단순하게 만듦
	모든 오브젝트들은 각각의 독립된 Local Space를 지닒

  1-2-3. Local Coordinate (로컬 좌표계)
	로컬 공간의 3D 위치 정보를 정의하는 좌표계
	사용자가 정의한 기준점을 원점으로 지정
	물체의 회전, 이동, 크기 변화의 기준

2. 가상 공간 배치
  2-1. World Space?
	오브젝트들이 모인 하나의 공간
	모델들의 상대적인 관계를 정의
  2-2. World Coordinate?
	모든 오브젝트들이 월드의 원점을 기준으로 배치된 좌표계
  2-3. 월드 변환의 필요성?
	각각의 오브젝트를 월드 변환없이 배치할 경우
	 -> 개별 오브젝트의 원점이 겹치게 되는 현상 발생

3. 카메라 공간으로의 전개
  3-1. 카메라?
	3D 공간을 화면으로 보기 위해 필요
	가상의 카메라가 바라보는 부분이 화면으로 출력됨
	카메라도 월드에서는 하나의 오브젝트
	사람의 눈과 같은 역할
  3-2. View Space?
	월드 공간 ->(변환) 카메라가 보이는 공간
	카메라 공간 으로도 지칭됨 (Camera Space)
	사람의 눈처럼 시야각과 가시거리가 존재
  3-3. Camera Coordinate
	카메라의 위치를 기준으로 구성된 좌표계
	카메라가 바라보는 방향을 +z축으로 지정
	카메라의 상태에 따라 모든 오브젝트를 재배치
  3-4. 의미?
	이후의 파이프라인 작업의 효율성 증대
	카메라와 오브젝트의 관계를 배제

4. 컬링
  4-1. 컬링?
	그릴 필요가 없는 폴리곤을 작업에서 제거하는 것
	연산과 렌더링을 모두 배제

  4-2. 종류

   4-2-1. 후면제거
	카메라 시점 기준과 지정된 판단 기준에 의해 전면, 후면을 판단
	전면(보이는 면), 후면(안 보이는 면)
	보이지 않는 후면을 제거하는 기법

	후면 판단 기준 : 폴리곤의 정점을 그리는 순서(두르기 순서)
	입력되는 버텍스의 순서대로 방향을 계산
	기준이 되는 방향과 반대 방향으로 그려지면 후면이라 판단
	폴리곤 생성 시 입력 순서를 잘못 설정하면 출력이 되지 않음

	DX의 판단 기준 설정
	 -> D3DCULL_NONE
	    - 후면 제거를 하지 않음
	 -> D3DCULL_CW
	    - 시계방향으로 그려진 폴리곤을 제거
	    - 시계방향 == 후면, 반시계방향 == 전면
	 -> D3DCULL_CCW
	    - 반시계방향으로 그려진 폴리곤을 제거
	    - 시계방향 == 전면, 반시계방향 == 후면

   4-2-2. 시각 절두체 컬링
	카메라 시야를 기준으로 보이지 않는 면을 제거
   4-2-3. 폐쇄 컬링
	오브젝트에 가려져 보이지 않는 영역을 제거

5. 조명 계산
  5-1. 3D 그래픽스에서 조명?
	실제로 존재하는 빛이 아님
	현실과 유사한 장면 연출을 위한 음영처리 연산
	현실과 같은 연산은 불가능(빛의 반사, 흡수 등)
	현실처럼 보이게 하는 연산은 가능(사물의 색상)
  5-2. 광원?
	가상공간에서 빛의 근원지가 되는 지점
	World Space 내에 정의됨
	World 내에 빛이 나는 오브젝트가 있다라고 가정
   5-2-1. 종류
    5-2-1-1. 방향성 광원
	위치 : 고려하지 않음
	방향 : 중요, 지정한 방향으로 평행하게 빛이 발산된다는 가정
	감쇄 : 없음
	활용 : 태양 빛과 같은 전역적 조명에 사용
    5-2-1-2. 점 광원
	위치 : 중요
	방향 : 고려하지 않음, 점에서 전 방향으로 퍼지는 빛을 가정
	감쇄 : 있음(광원으로부터 떨어진 거리에 비례)
	활용 : 조명탄이나 백열전구 같은 곳에 활용
    5-2-1-3. 스포트라이트
	위치 : 중요
	방향 : 중요, 지정 방향으로 원꼴형 발산 가정
	감쇄 : 있음(피조면의 중심으로부터 거리 비례)
	활용 : 손전등, 가로등 등에 활용
  5-3. 빛의 구성 요소
	모든 광원이 가지는 요소
	조명 효과와 유사한 연산을 위해 필요한 요소
	반사광의 비율
   5-3-1. 종류
    5-3-1-1. 환경광
	실제 환경광이란 주변 사물의 반사광에 의해 표현되는 빛
	연산과정의 오버헤드가 심하기 때문에 실시간 연산은 부적합
	"평균적인 기본 밝기" 로 사용
    5-3-1-2. 난반사광
	빛이 물체의 표면에 부딪혀 고르게 산란되는 빛
	관찰자의 위치와 상관없이 빛의 강도가 일정
    5-3-1-3. 정반사광
	빛이 물체의 표면에 부딪혀 한 방향으로 반사되는 빛
	입사각과 출사각이 같은 것이 특징(법선 기준)
	관찰자의 위치에 따라 빛의 강도가 다름

6. 클리핑
  6-1. 클리핑?
	시야로부터 완전히 벗어난 폴리곤을 그리지 않는 기법
	시계에 걸친 폴리곤을 잘라내는 처리
	컬링과는 다르게 연산은 하지만, 랜더만 제외